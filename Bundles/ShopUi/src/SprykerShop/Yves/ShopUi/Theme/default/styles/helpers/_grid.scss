@function helper-grid-span($column, $columns: $setting-grid-columns) {
    @return (100% / $columns) * $column;
}

@function helper-grid-edge-min($edges) {
    @if length($edges) > 0 {
        @return nth($edges, 1);
    }

    @return 0;
}

@function helper-grid-edge-max($edges) {
    @if length($edges) > 1 {
        @return nth($edges, 2);
    }

    @return null;
}

@mixin helper-grid-media-min($min: 0) {
    @media only screen and (min-width: $min) {
        @content;
    }
}

@mixin helper-grid-media-between($min: 0, $max: $setting-grid-max-width) {
    @media only screen and (min-width: $min) and (max-width: $max) {
        @content;
    }
}

@mixin helper-grid-media-max($max: $setting-grid-max-width) {
    @media only screen and (max-width: $max) {
        @content;
    }
}

@mixin helper-grid-breakpoint($min-bp, $max-bp: null) {
    $edges-min: map-get($setting-grid-breakpoints, $min-bp);
    $edge-min: helper-grid-edge-min($edges-min);

    @if $max-bp == null {
        @include helper-grid-media-min($edge-min) {
            @content;
        }
    } @else {
        $edges-max: map-get($setting-grid-breakpoints, $max-bp);
        $edge-max: helper-grid-edge-max($edges-max);

        @if $edge-max == null {
            @include helper-grid-media-min($edge-min) {
                @content;
            }
        } @else {
            @include helper-grid-media-between($edge-min, $edge-max) {
                @content;
            }
        }
    }
}
