{% extends template('page-layout-shopping-list', 'ShoppingListPage') %}

{% block breadcrumbs %}
    {% include molecule('breadcrumb') with {
        data: {
            steps: [{
                label: 'customer.account' | trans,
            },{
                label: 'customer.account.shopping_list' | trans,
            }]
        }
    } only %}
{% endblock %}

{% define data = {
    title: _view.shoppingListOverview.shoppingList.name,
    shoppingList: _view.shoppingListOverview.shoppingList,
    shoppingListCollection: _view.shoppingListOverview.shoppingLists,
    shoppingListItems: _view.shoppingListItems
} %}

{% block customerNavigation %}
    {% widget 'CustomerNavigationWidget' args ['shoppingList', data.shoppingList.idShoppingList] only %}
    {% elsewidget 'CustomerNavigationWidgetPlugin' args ['shoppingList', data.shoppingList.idShoppingList] only %} {# @deprecated Use CustomerNavigationWidget instead. #}
    {% endwidget %}
{% endblock %}

{% block customerContent %}
    <div class="box">
        <div class="grid grid--justify">
            <div class="col">
                <h4>{{ data.shoppingList.name }}</h4>
            </div>
            <div class="col">
                {% if can('WriteShoppingListPermissionPlugin', data.shoppingList.idShoppingList) %}
                    <a class="button button--success" href="{{ url('shopping-list/update', { idShoppingList: data.shoppingList.idShoppingList }) }}">{{ 'customer.account.shopping_list.overview.edit' | trans }}</a>
                    <a class="button button--success" href="{{ url('shopping-list/share', { idShoppingList: data.shoppingList.idShoppingList }) }}">{{ 'customer.account.shopping_list.overview.share' | trans }}</a>
                {% endif %}
                <a class="button button--success" href="{{ path('shopping-list/print', {idShoppingList: data.shoppingList.idShoppingList}) }}" target="_blank">{{ 'customer.account.shopping_list.print_shopping_list' | trans }}</a>
            </div>
        </div>
        <hr>

        {% include molecule('shopping-list-info', 'ShoppingListPage') with {
            data: {
                shoppingList: data.shoppingList
            }
        } only %}

        <hr>
        {% if data.shoppingListItems|length %}
            <form method="POST" action="{{ path('shopping-list/add-to-cart') }}">
                <div class="grid grid--justify spacing-y spacing-y--inner">
                    <div class="col">
                        <button type="submit" class="button button--success" {{qa('submit-button')}}>
                            {{ 'customer.account.shopping_list.add_selected_items_to_cart' | trans }}
                        </button>
                    </div>
                    <div class="col">
                        <button type="submit" class="button button--success" name="add-all-available" value="1" {{qa('submit-button')}}>
                            {{ 'customer.account.shopping_list.add_all_available_to_cart' | trans }}
                        </button>
                    </div>
                </div>
<<<<<<< HEAD
            <input type="hidden" value="{{ data.shoppingList.idShoppingList }}" name="idShoppingList"/>
            <table class="table table--expand">
                <thead>
                <tr>
                    <th></th>
                    <th class="text-center" colspan="2">{{ data.labels.productLabel }}</th>
                    <th class="text-center">{{ data.labels.priceLabel  }}</th>
                    <th class="text-center">{{ data.labels.quantityLabel }}</th>
                    <th class="text-center">{{ data.labels.availabilityLabel  }}</th>
                    <th class="text-center">{{ data.labels.actionsLabel }}</th>
                </tr>
                </thead>
                <tbody>
                {% for item in data.shoppingListItems %}
                    {% set isItemAvailable = item.available is defined and item.available and item.price is defined and item.price is not null %}
                    {% set productDiscontinuedWidget = findWidget('ProductDiscontinuedWidget', [item.sku]) %}
                    {% set isDiscontinued = productDiscontinuedWidget.isDiscontinued ?? widgetBlock('ProductDiscontinuedWidgetPlugin', 'isDiscontinued', item.sku) %} {# @deprecated Use ProductDiscontinuedWidget instead of ProductDiscontinuedWidgetPlugin. #}
                    {% if isDiscontinued is not null %}
                        {% set isItemAvailable = not isDiscontinued and isItemAvailable %}
                    {% endif %}
                    <tr>
                        <td>
                            <input type="checkbox" {{ isItemAvailable ? '' : 'disabled' }} name="shoppingListItem[idShoppingListItem][{{ item.idShoppingListItem }}]" value="{{ item.idShoppingListItem }}"/>
                        </td>
                        <td class="text-center">
                            {% if item.images is defined and item.images is not empty %}
                                {% include atom('thumbnail') with {
                                    modifiers: ['small', 'min-size'],
                                    attributes: {
                                        alt: item.name,
                                        src: item.images.0.externalUrlSmall,
                                        title: item.name
                                    }
                                } only %}
                            {% endif %}
                        </td>
                        <td class="text-center">
                            <a href="{{ item.url }}">{{ item.name }}</a>
                            <div><small>{{ item.sku }}</small></div>
                            {% for attribute in item.superAttributesDefinition %}
                                {% if item.attributes[attribute] is defined %}
                                    {{ ('product.attribute.'~attribute) | trans }}: {{ item.attributes[attribute] }} <br/>
                                {% endif %}
                            {% endfor %}
                        </td>
                        <td nowrap="nowrap" class="text-center">
                            {% if item.price is not null %}
                                {% include molecule('price') with {
                                    data: {
                                        amount: item.price | money,
                                        originalAmount: item.prices.ORIGINAL is not defined or item.prices.ORIGINAL is empty ? null : (item.prices.ORIGINAL | money)
                                    }
                                } only %}
                            {% else %}
                                N/A
                            {% endif %}
                        </td>
                        <td class="text-center">
                            <input class="input" {{ isItemAvailable ? '' : 'disabled' }} type="number" name="shoppingListItem[quantity][{{ item.idShoppingListItem }}]" value="{{ item.quantity }}"/>
                        </td>
                        <td class="text-center">
                            {% if isItemAvailable %}
                                {{ data.labels.itemAvailableLabel }}
                            {% else %}
                                {% widget 'ProductDiscontinuedWidget' args [item.sku] only %}
                                {% elsewidget 'ProductDiscontinuedWidgetPlugin' args [item.sku] only %} {# @deprecated Use ProductDiscontinuedWidget instead. #}
                                {% nowidget %}
                                    {{ data.labels.itemNotAvailableLabel }}
                                {% endwidget %}
                            {% endif %}
                        </td>
                        <td>
                            {% if isItemAvailable %}
                                <button type="submit" name="add-item" class="button button--success" value="{{ item.idShoppingListItem }}" {{qa('submit-button')}}>
                                    {{data.labels.addItemToCartLabel}}
                                </button>
                            {% endif %}
                            {% if can('WriteShoppingListPermissionPlugin', data.shoppingList.idShoppingList) %}
                                <a class="button button--alert" href="{{ path('shopping-list/remove-item', {idShoppingListItem: item.idShoppingListItem, idShoppingList: data.shoppingList.idShoppingList}) }}">
                                    {{data.labels.removeItemFromShoppingListLabel}}
                                </a>
                            {% endif %}
                        </td>
                    </tr>
                    {% if can('WriteShoppingListPermissionPlugin', data.shoppingList.idShoppingList) %}
                        {% widget 'ShoppingListProductAlternativeWidget' args [item, data.shoppingList] only %}
                        {% elsewidget 'ProductAlternativeWidgetPlugin' args [item, data.shoppingList] only %} {# @deprecated Use ShoppingListProductAlternativeWidget instead. #}
                        {% endwidget %}
                    {% endif %}
                {% endfor %}
                </tbody>
            </table>
=======

                <input type="hidden" value="{{ data.shoppingList.idShoppingList }}" name="idShoppingList"/>

                <div class="is-scrollable-x">
                    {% include molecule('shopping-list-table', 'ShoppingListPage') with {
                        data: {
                            shoppingList: data.shoppingList,
                            shoppingListItems: data.shoppingListItems
                        }
                    } only %}
                </div>
>>>>>>> feature/te-29/master-global-widgets
            </form>
        {% else %}
            {{ 'customer.account.shopping_list.empty' | trans }}
        {% endif %}
    </div>
{% endblock %}
