{% extends molecule('shopping-list-table', 'ShoppingListPage') %}

{% define data = {
    shoppingListItems: required,
    idShoppingList: required,
    shoppingList: required,
    shoppingListItemProducts: required,
    form: required
} %}

{% block body %}
    <thead class="{{ config.name }}__head">
        <tr>
            <th class="{{ config.name }}__cell text-left" colspan="3">{{ 'customer.account.shopping_list.product' | trans }}</th>
            <th class="{{ config.name }}__cell text-center">{{ 'customer.account.shopping_list.price' | trans }}</th>
            <th class="{{ config.name }}__cell text-center">{{ 'customer.account.shopping_list.quantity' | trans }}</th>
            <th class="{{ config.name }}__cell text-center">{{ 'customer.account.shopping_list.availability' | trans }}</th>
            <th class="{{ config.name }}__cell text-center">{{ 'customer.account.shopping_list.overview.actions' | trans }}</th>
        </tr>
    </thead>
    <tbody>
        {% for key, shoppingListItem in data.shoppingListItems %}}
            {% set product = data.shoppingListItemProducts[shoppingListItem.idShoppingListItem] %}
            {% set isProductAvailable = product.available is defined and product.available and product.price is defined and product.price is not null %}
            {% set productDiscontinuedWidget = findWidget('ProductDiscontinuedWidget', [product.sku]) %}
            {% set isDiscontinued = productDiscontinuedWidget.isDiscontinued ?? widgetBlock('ProductDiscontinuedWidgetPlugin', 'isDiscontinued', product.sku) %} {# @deprecated Use ProductDiscontinuedWidget instead of ProductDiscontinuedWidgetPlugin. #}
            {% if isDiscontinued is not null %}
                {% set isProductAvailable = not isDiscontinued and isProductAvailable %}
            {% endif %}
            <tr class="{{ config.name }}__row {{ not isProductAvailable ? config.name ~ '__row--disable' : ''}}">
                <td class="{{ config.name }}__cell">&nbsp;</td>
                <td class="{{ config.name }}__cell text-center">
                    {% if product.images is defined and product.images is not empty and product.images.0.externalUrlSmall is not empty %}
                        {% include atom('thumbnail') with {
                            modifiers: ['small', 'min-size'],
                            attributes: {
                                alt: product.name | default,
                                src: product.images.0.externalUrlSmall,
                                title: product.name | default
                            }
                        } only %}
                    {% endif %}
                </td>
                <td class="{{ config.name }}__cell">
                    {% if product.name is not empty %}
                        <a href="{% if product.url is not empty %}{{ product.url }}{% endif %}">{{ product.name }}</a>
                    {% endif %}
                    {% if product.sku is not empty %}
                        <div>
                            <small>{{ product.sku }}</small>
                        </div>
                    {% endif %}
                    {% for attribute in product.superAttributesDefinition %}
                        {% if product.attributes[attribute] is defined %}
                            {{ ('product.attribute.'~attribute) | trans }}: {{ product.attributes[attribute] }} <br>
                        {% endif %}
                    {% endfor %}
                    {% for subForm in data.form.items[key].children  %}
                        {% if not subForm.rendered %}
                            {% if subForm.vars.template_path is defined %}
                                {% include subForm.vars.template_path with {'form': subForm} %}
                            {% endif %}
                        {% endif %}
                    {% endfor %}
                </td>
                <td nowrap="nowrap" class="{{ config.name }}__cell text-center">
                    {% if product.price is not null %}
                        {% include molecule('price') with {
                            data: {
                                amount: product.price | money,
                                originalAmount: product.prices.ORIGINAL is not defined or product.prices.ORIGINAL is empty ? null : (product.prices.ORIGINAL | money)
                            }
                        } only %}
                    {% else %}
                        {{ 'product_alternative_widget.not_applicable' | trans }}
                    {% endif %}
                </td>
                <td class="{{ config.name }}__cell text-center">
                    {{ form_row(data.form.items[key].quantity, {'attr': {'readonly': not isProductAvailable}, type: 'number'}) }}
                </td>
                <td class="{{ config.name }}__cell text-center">
                    {% if isProductAvailable %}
                        {{ 'customer.account.shopping_list.available' | trans }}
                    {% else %}
                        {% widget 'ProductDiscontinuedWidget' args [product.sku] only %}
                        {% elsewidget 'ProductDiscontinuedWidgetPlugin' args [product.sku] only %} {# @deprecated Use ProductDiscontinuedWidget instead. #}
                        {% nowidget %}
                            {{ 'customer.account.shopping_list.not_available' | trans }}
                        {% endwidget %}
                    {% endif %}
                </td>
                <td class="{{ config.name }}__cell">
                    <a class="button button--alert" href="{{ path('shopping-list/remove-item', {
                        idShoppingList: data.idShoppingList, idShoppingListItem: shoppingListItem.idShoppingListItem
                    }) }}">
                        {{'customer.account.shopping_list.remove' | trans}}
                    </a>
                </td>
            </tr>
            {% if can('WriteShoppingListPermissionPlugin', data.idShoppingList) %}
                {% widget 'ShoppingListProductAlternativeWidget' args [product, data.shoppingList] only %}
                {% elsewidget 'ProductAlternativeWidgetPlugin' args [product, data.shoppingList] only %} {# @deprecated Use ShoppingListProductAlternativeWidget instead. #}
                {% endwidget %}
            {% endif %}
        {% endfor %}
        <tr class="{{ config.name }}__row">
            <td class="{{ config.name }}__cell" colspan="6">&nbsp;</td>
            <td class="{{ config.name }}__cell text-right">
                <a class="button button--alert" href="{{ path('shopping-list/clear', {idShoppingList: data.idShoppingList}) }}">
                    {{ 'shopping_list.remove_all_items' | trans }}
                </a>
            </td>
        </tr>
    </tbody>
{% endblock %}
