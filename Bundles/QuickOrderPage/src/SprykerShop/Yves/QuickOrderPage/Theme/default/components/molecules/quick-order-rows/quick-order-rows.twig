{% extends model('component') %}

{% define config = {
    name: 'quick-order-rows'
} %}

{% define data = {
    rows: required,
    productConcretesData: [],
    additionalColumns: []
} %}

{% block body %}
    <div class="grid grid--justify grid--middle {{config.name}}__row {{config.name}}__row--head">
        <div class="col col--sm-5 spacing spacing--inner">
            {{ 'quick-order.input-label.sku.name' | trans }}
        </div>

        <div class="col col--sm-6">
            <div class="grid grid--justify grid--middle">
                {% if data.additionalColumns is not empty %}
                    <div class="col col--sm-6">
                        {% for additionalColumn in data.additionalColumns %}
                            <div class="col col--expand spacing spacing--inner">
                                {% block additionalColumn %}
                                    {{ additionalColumn.title | trans }}
                                {% endblock %}
                            </div>
                        {% endfor %}
                    </div>
                {% endif %}

                <div class="col col--sm-3 spacing spacing--inner">
                    {{ 'quick-order.input-label.qty' | trans }}
                </div>

                <div class="col col--sm-3 spacing spacing--inner">
                    {{ 'quick-order.input-label.price' | trans }}
                </div>
            </div>
        </div>

        <div class="col col--sm-1"></div>
    </div>

    {% for row in data.rows %}
        {% set productConcreteData = data.productConcretesData[row.id_product_concrete.vars.value] ?? null %}
        {% embed molecule('quick-order-row', 'QuickOrderPage') with {
            class: config.name ~ '__row',
            data: {
                index: loop.index0,
                quantityField: row.qty,
                skuField: row.sku,
                additionalColumns: data.additionalColumns,

                autocomplete: {
                    sku: row.sku,
                    idProductConcrete: row.id_product_concrete,
                    fullName: row.vars.full_name,
                    inputValue: productConcreteData is null ? null : productConcreteData.name ~ ' (' ~ productConcreteData.sku ~ ')',
                }
            },
            embed: {
                isFirstRow: loop.first
            }
        } only %}
            {% block delete %}{% if not embed.isFirstRow %}{{parent()}}{% endif %}{% endblock %}
        {% endembed %}
    {% endfor %}
{% endblock %}
