{% extends "@QuickOrderPage/layout.twig" %}

{% block content %}
<div class="row">
    <div class="small-12 columns">
        {% include "@QuickOrderPage/quick-order/partials/form.twig"  with {'form': _view.form} %}
    </div>
</div>
{% endblock %}

{% block javascript %}
    {{ parent() }}
    <style>
        .autocomplete-suggestions { -webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box; border: 1px solid #999; background: #FFF; cursor: default; overflow: auto; -webkit-box-shadow: 1px 4px 3px rgba(50, 50, 50, 0.64); -moz-box-shadow: 1px 4px 3px rgba(50, 50, 50, 0.64); box-shadow: 1px 4px 3px rgba(50, 50, 50, 0.64); }
        .autocomplete-suggestion { padding: 2px 5px; white-space: nowrap; overflow: hidden; }
        .autocomplete-no-suggestion { padding: 2px 5px;}
        .autocomplete-selected { background: #F0F0F0; }
        .autocomplete-suggestions strong { font-weight: bold; color: #000; }
        .autocomplete-group { padding: 2px 5px; font-weight: bold; font-size: 16px; color: #000; display: block; border-bottom: 1px solid #000; }
    </style>

    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/jquery-3.3.1.js"></script>
    <script src="/assets/default/js/jquery.autocomplete.min.js"></script>
    <script>
        jQuery(function($) {
            var rowsNumber = {{ _view.rowsNumber }};

            $('.quick-order-form')
                .on('change', '.js-qty-input-field', qtyInputHandler)
                .on('keyup',  '.js-qty-input-field', qtyInputHandler);

            $('.quick-order-form .js-qty-input-field[value!=""]').trigger('change');

            $('.js-add-more-rows-button').on('click', addMoreRows);

            $('.js-verify-text-order').on('click', function (e) {
                if ($('#quick_order_form_textOrder').val() === '') {
                    e.preventDefault();
                }
            });

            initAutocomplete();

            function initAutocomplete() {
                $('.js-autocomplete-input-field').each(function (n, input) {
                    var idSearchInput = $(input).attr('id'),
                        $skuInput = $('#' + idSearchInput.replace('_searchQuery', '_sku')),
                        $priceInput = $('#' + idSearchInput.replace('_searchQuery', '_price')),
                        $qtyInput = $('#' + idSearchInput.replace('_searchQuery', '_qty')),
                        $searchField = $('#' + idSearchInput.replace('_searchQuery', '_searchField')),
                        $errorPanel = $('.js-product-error', $(input).parent());

                    $(input).autocomplete({
                        minChars: 2,
                        serviceUrl: "{{ path('quick-order/suggestion') }}",
                        paramName: 'q',
                        params: {
                            field: $('option:selected', $searchField).val()
                        },
                        groupBy: null,
                        onSearchStart: function () {
                            var sku = $skuInput.val();
                            // prevent repeated query on input focus
                            if (sku && this.value.indexOf(sku) !== -1) {
                                return false;
                            }
                        },
                        onSearchComplete: function (query, suggestions) {
                            $errorPanel.hide();
                            if (suggestions.length === 0) {
                                $errorPanel.text('Item Number Cannot Be Found');
                                $errorPanel.show();
                            }
                        },
                        onSelect: function (suggestion) {
                            $skuInput.val(suggestion.data.sku);
                            if (suggestion.data.available) {
                                $qtyInput.val(1);
                                $qtyInput.attr('disabled', false);
                                $priceInput.val(suggestion.data.price);
                                $qtyInput.trigger('change');
                                $qtyInput.focus();
                            } else {
                                $errorPanel.text('This Product Is Not Available');
                                $errorPanel.show();
                            }
                        }
                    });

                    $(input).on('change', function () {
                        if (this.value === '') {
                            $skuInput.val('');
                            $qtyInput.val('');
                            $priceInput.val('');
                            $qtyInput.trigger('change');
                            $qtyInput.attr('disabled', true);
                        }
                    });
                });
            }

            function qtyInputHandler(e) {
                var $qtyInput = $(e.target),
                    idQtyInput = $qtyInput.attr('id'),
                    qty = $qtyInput.val(),
                    qtyIntValue = qty.replace(/[^0-9]/g, ''),
                    price = $('#' + idQtyInput.replace('_qty', '_price')).val(),
                    $pricePanelInput = $('#' + idQtyInput.replace('_qty', '_pricePanel'));

                $pricePanelInput.val('');
                $qtyInput.val(qtyIntValue);

                if (qty && price) {
                    var newPrice = (qty * price / 100).toFixed(2);
                    $pricePanelInput.val(newPrice)
                }
            }

            function addMoreRows(e) {
                e.preventDefault();
                var $rows = $('.quick-order-form .items-container .row'),
                    $lastRow = $rows.last(),
                    index = $lastRow.data('index'),
                    newRowsHtml = '';

                for (var i = index + 1; i < $rows.length + rowsNumber; i++) {
                    var newRowHtml = $lastRow[0].outerHTML;
                    newRowsHtml += newRowHtml
                        .replace('data-index="' + index + '"', 'data-index="' + i + '"')
                        .replace(new RegExp('_' + index + '_', 'g'), '_' + i + '_')
                        .replace(new RegExp('\\[' + index + '\\]', 'g'), '[' + i + ']')
                        .replace(/value=".*"/g, '')
                }

                $('.quick-order-form .items-container').append(newRowsHtml)

                initAutocomplete();
            }
        });
    </script>
{% endblock %}
